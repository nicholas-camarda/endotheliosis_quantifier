# Glomeruli Fine-tuning Configuration  
# This is Step 2 of the segmentation pipeline - fine-tuning on glomeruli data
# Uses the mitochondria-pretrained model as starting point

name: "glomeruli_finetuning"
description: "Fine-tune mitochondria-pretrained U-Net on glomeruli segmentation data"

# Transfer Learning Configuration
pretrained_model:
  path: "models/segmentation/mitochondria/mito_dynamic_unet_seg_model-e50_b16.pkl"  # Using standardized path
  description: "Mitochondria-pretrained U-Net model"
  freeze_encoder: false  # Allow full fine-tuning

# Data Pipeline Configuration
data:
  # Raw data paths (project-based organization)
  raw_images: "raw_data/preeclampsia_project/data"
  raw_annotations: "raw_data/preeclampsia_project/annotations/annotations.json"
  raw_metadata: "raw_data/preeclampsia_project/subject_metadata.xlsx"
  
  # Processed data paths
  metadata: "derived_data/glomeruli_data/metadata/standardized_metadata.xlsx"
  
  # Label Studio annotations
  annotations:
    json_file: "raw_data/preeclampsia_project/annotations/annotations.json"  # Path to Label Studio export - will be copied to derived_data/cache
    processor: "load_annotations_from_json"  # Function from data_loader.py
    
  # Processed data structure
  processed:
    train_dir: "derived_data/glomeruli_data/training/image_patches"
    train_mask_dir: "derived_data/glomeruli_data/training/mask_patches"
    test_dir: "derived_data/glomeruli_data/testing/image_patches"
    cache_dir: "derived_data/glomeruli_data/cache"
    
  # Image preprocessing
  preprocessing:
    convert_tif_to_jpg: true
    resize_to: [256, 256]  # Match original training size
    normalize: true
    
  # Train/test split (programmatic)
  split:
    train_ratio: 0.7
    val_ratio: 0.15
    test_ratio: 0.15
    random_seed: 84  # Different from mito to avoid data leakage
    stratify: true  # Stratify by endotheliosis score if available

# Model Configuration
model:
  architecture: "dynamic_unet"
  backbone: "resnet34" 
  input_size: [256, 256]  # Match original training size
  num_classes: 2  # background + glomeruli
  
  # Fine-tuning parameters
  training:
    epochs: 50
    batch_size: 16
    learning_rate: 1e-4  # Lower LR for fine-tuning
    weight_decay: 1e-4
    scheduler: "cosine_annealing"
    early_stopping:
      patience: 10
      monitor: "val_dice"
      
  # Output model path
  checkpoint_path: "models/segmentation/glomeruli/glom_dynamic_unet_seg_model-e50_b16.pkl"  # Using standardized path

# Label Studio Integration
label_studio:
  export_format: "JSON"
  annotation_types:
    - "rle"  # Run-length encoding masks
    - "choices"  # Endotheliosis scores
  
  # RLE mask processing
  rle_processing:
    decode_function: "rle2mask"  # Function from data_loader.py
    mask_resize: [256, 256]  # Match original training size

# Data Augmentation (for fine-tuning)
augmentation:
  enabled: true
  techniques:
    - "horizontal_flip"
    - "vertical_flip" 
    - "rotation"
    - "brightness_contrast"
    - "gaussian_noise"
  probability: 0.5

# Hardware Configuration
hardware:
  device: "auto"  # auto-detect MPS/CUDA/CPU
  mixed_precision: true
  num_workers: 4
  mps_fallback: true  # Enable CPU fallback for MPS unsupported operations
  force_cpu: false  # Force CPU usage if needed

# Reproducibility
reproducibility:
  random_seed: 84
  deterministic: true

# Logging and Monitoring
logging:
  level: "INFO"
  save_plots: true
  plot_dir: "output/glomeruli_finetuning/plots"
  metrics:
    - "dice_coefficient"
    - "iou"
    - "pixel_accuracy"
    
# Evaluation
evaluation:
  metrics:
    - "dice_coefficient"
    - "jaccard_index" 
    - "sensitivity"
    - "specificity"
  save_predictions: true
  prediction_dir: "output/glomeruli_finetuning/predictions"

# Final Model Information
final_model:
  description: "Glomeruli segmentation model fine-tuned from mitochondria pretraining"
  use_case: "Segment glomeruli in preeclampsia histology images for endotheliosis quantification"
  next_step: "Use for ROI extraction in quantification pipeline"
